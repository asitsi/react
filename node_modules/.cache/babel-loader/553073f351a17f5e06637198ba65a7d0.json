{"ast":null,"code":"var _jsxFileName = \"E:\\\\test\\\\frontend\\\\src\\\\core\\\\Quiz\\\\components\\\\core\\\\Main.jsx\";\nimport React, { Component } from \"react\";\nimport data from \"../questions_data/data\";\nimport Answers from \"./Answers.jsx\"; // import Popup from './Popup.jsx';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      total: data.length,\n      showButton: false,\n      questionAnswered: false,\n      score: 0,\n      displayPopup: \"flex\"\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.handleShowButton = this.handleShowButton.bind(this);\n    this.handleStartQuiz = this.handleStartQuiz.bind(this);\n    this.handleIncreaseScore = this.handleIncreaseScore.bind(this);\n  }\n\n  componentWillMount() {\n    let {\n      count\n    } = this.state;\n    this.insertData(count);\n  }\n\n  insertData(count) {\n    this.setState({\n      question: data[count].question,\n      answers: [data[count].answers[0], data[count].answers[1], data[count].answers[2], data[count].answers[3]],\n      correct: data[count].correct,\n      count: this.state.count + 1\n    });\n  }\n\n  handleShowButton() {\n    this.setState({\n      showButton: true,\n      questionAnswered: true\n    });\n  }\n\n  nextQuestion() {\n    let {\n      count,\n      total\n    } = this.state;\n\n    if (count === total) {\n      this.setState({\n        displayPopup: \"flex\"\n      });\n    } else {\n      this.insertData(count);\n      this.setState({\n        showButton: false,\n        questionAnswered: false\n      });\n    }\n  }\n\n  handleStartQuiz() {\n    this.setState({\n      displayPopup: \"none\",\n      count: 1\n    });\n  }\n\n  handleIncreaseScore() {\n    this.setState({\n      score: this.state.score + 1\n    });\n  }\n\n  render() {\n    let {\n      count,\n      total,\n      question,\n      answers,\n      correct,\n      showButton,\n      questionAnswered,\n      displayPopup,\n      score\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Quiz_container_heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Popular Updates\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"theme_color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"Hot & Trending\"), \" Quiz\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Question \", count, \"/\", total), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, question)), /*#__PURE__*/React.createElement(Answers, {\n      answers: answers,\n      correct: correct,\n      showButton: this.handleShowButton,\n      isAnswered: questionAnswered,\n      increaseScore: this.handleIncreaseScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, showButton ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"fancy-btn\",\n      onClick: this.nextQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, count === total ? \"Finish quiz\" : \"Next question\") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["E:/test/frontend/src/core/Quiz/components/core/Main.jsx"],"names":["React","Component","data","Answers","Main","constructor","props","state","count","total","length","showButton","questionAnswered","score","displayPopup","nextQuestion","bind","handleShowButton","handleStartQuiz","handleIncreaseScore","componentWillMount","insertData","setState","question","answers","correct","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport data from \"../questions_data/data\";\nimport Answers from \"./Answers.jsx\";\n// import Popup from './Popup.jsx';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      total: data.length,\n      showButton: false,\n      questionAnswered: false,\n      score: 0,\n      displayPopup: \"flex\",\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.handleShowButton = this.handleShowButton.bind(this);\n    this.handleStartQuiz = this.handleStartQuiz.bind(this);\n    this.handleIncreaseScore = this.handleIncreaseScore.bind(this);\n  }\n\n  componentWillMount() {\n    let { count } = this.state;\n    this.insertData(count);\n  }\n\n  insertData(count) {\n    this.setState({\n      question: data[count].question,\n      answers: [\n        data[count].answers[0],\n        data[count].answers[1],\n        data[count].answers[2],\n        data[count].answers[3],\n      ],\n      correct: data[count].correct,\n      count: this.state.count + 1,\n    });\n  }\n\n  handleShowButton() {\n    this.setState({\n      showButton: true,\n      questionAnswered: true,\n    });\n  }\n\n  nextQuestion() {\n    let { count, total } = this.state;\n\n    if (count === total) {\n      this.setState({\n        displayPopup: \"flex\",\n      });\n    } else {\n      this.insertData(count);\n      this.setState({\n        showButton: false,\n        questionAnswered: false,\n      });\n    }\n  }\n\n  handleStartQuiz() {\n    this.setState({\n      displayPopup: \"none\",\n      count: 1,\n    });\n  }\n\n  handleIncreaseScore() {\n    this.setState({\n      score: this.state.score + 1,\n    });\n  }\n\n  render() {\n    let {\n      count,\n      total,\n      question,\n      answers,\n      correct,\n      showButton,\n      questionAnswered,\n      displayPopup,\n      score,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"Quiz_container_heading\">\n          <p>Popular Updates</p>\n          <h2>\n            <span className=\"theme_color\">Hot & Trending</span> Quiz\n          </h2>\n        </div>\n        <div className=\"container\">\n          {/* <Popup style={{display: displayPopup}} \n             score={score} \n             total={total} \n             startQuiz={this.handleStartQuiz}\n        /> */}\n\n          <div className=\"row\">\n            <div className=\"col-lg-12 col-md-10\">\n              <div id=\"question\">\n                <h4 className=\"bg-light\">\n                  Question {count}/{total}\n                </h4>\n                <p>{question}</p>\n              </div>\n\n              <Answers\n                answers={answers}\n                correct={correct}\n                showButton={this.handleShowButton}\n                isAnswered={questionAnswered}\n                increaseScore={this.handleIncreaseScore}\n              />\n\n              <div id=\"submit\">\n                {showButton ? (\n                  <button className=\"fancy-btn\" onClick={this.nextQuestion}>\n                    {count === total ? \"Finish quiz\" : \"Next question\"}\n                  </button>\n                ) : (\n                  <span></span>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}