{"ast":null,"code":"var _jsxFileName = \"E:\\\\test\\\\frontend\\\\src\\\\core\\\\Polls\\\\Test.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Poll from \"react-polls\";\nimport \"../../styles.scss\";\nimport { isAutheticated } from \"../../auth/helper/index\";\nimport { getPolls, postPoll } from \"../helper/coreapicalls\";\nimport axios from \"axios\";\nimport { API } from \"../../backend\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Test = () => {\n  const userId = isAutheticated() && isAutheticated().user._id;\n\n  const [polls, setPoll] = useState([]);\n  const [error, seterror] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    loadPoll();\n  }, [polls]);\n\n  const loadPoll = () => {\n    getPolls().then(data => {\n      if (data.error) {\n        seterror(data.error);\n      } else {\n        setPoll(data.reverse());\n        console.log(data);\n      }\n    });\n  }; // Handling user vote\n  // Increments the votes count of answer when the user votes\n\n\n  const handalchange = async (pollId, userId, answer) => {\n    if (userId === false || 0) {\n      history.push(\"/signin\");\n    } else {\n      console.log(pollId);\n      console.log(userId); // getting\n\n      console.log(answer); // getting\n\n      await axios.post(`${API}/vote/${pollId}`, {\n        userId,\n        answer\n      }).then(data => {\n        if (data.error) {\n          seterror(data.error);\n          console.log(data.error);\n        } else {\n          loadPoll(); // console.log(data);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, polls.reverse().map((poll, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4 col-12 gy-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card poll_card\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Poll, {\n    question: poll.question,\n    answers: Object.keys(poll.options).map(key => {\n      return {\n        option: key,\n        votes: poll.options[key].length\n      };\n    }),\n    onVote: answer => handalchange(poll._id, userId, answer, console.log(answer)) // getting vote\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Test;","map":{"version":3,"sources":["E:/test/frontend/src/core/Polls/Test.js"],"names":["React","useState","useEffect","Poll","isAutheticated","getPolls","postPoll","axios","API","useHistory","Test","userId","user","_id","polls","setPoll","error","seterror","history","loadPoll","then","data","reverse","console","log","handalchange","pollId","answer","push","post","map","poll","index","question","Object","keys","options","key","option","votes","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Poll from \"react-polls\";\r\nimport \"../../styles.scss\";\r\nimport { isAutheticated } from \"../../auth/helper/index\";\r\nimport { getPolls, postPoll } from \"../helper/coreapicalls\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../../backend\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Test = () => {\r\n  const userId = isAutheticated() && isAutheticated().user._id;\r\n  const [polls, setPoll] = useState([]);\r\n  const [error, seterror] = useState(false);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    loadPoll();\r\n  }, [polls]);\r\n\r\n  const loadPoll = () => {\r\n    getPolls().then((data) => {\r\n      if (data.error) {\r\n        seterror(data.error);\r\n      } else {\r\n        setPoll(data.reverse());\r\n        console.log(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Handling user vote\r\n  // Increments the votes count of answer when the user votes\r\n  const handalchange = async (pollId, userId, answer) => {\r\n    if (userId === false || 0) {\r\n      history.push(\"/signin\");\r\n    } else {\r\n      console.log(pollId);\r\n      console.log(userId); // getting\r\n      console.log(answer); // getting\r\n      await axios\r\n        .post(`${API}/vote/${pollId}`, { userId, answer })\r\n        .then((data) => {\r\n          if (data.error) {\r\n            seterror(data.error);\r\n            console.log(data.error);\r\n          } else {\r\n            loadPoll();\r\n            // console.log(data);\r\n          }\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      {polls.reverse().map((poll, index) => (\r\n        <div className=\"col-lg-4 col-12 gy-3\">\r\n          <div className=\"card poll_card\" key={index}>\r\n            <div className=\"card-body\">\r\n              <Poll\r\n                question={poll.question}\r\n                answers={Object.keys(poll.options).map((key) => {\r\n                  return {\r\n                    option: key,\r\n                    votes: poll.options[key].length,\r\n                  };\r\n                })}\r\n                onVote={\r\n                  (answer) =>\r\n                    handalchange(poll._id, userId, answer, console.log(answer)) // getting vote\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}