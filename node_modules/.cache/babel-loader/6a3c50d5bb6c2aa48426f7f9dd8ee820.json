{"ast":null,"code":"var _jsxFileName = \"E:\\\\test\\\\frontend\\\\src\\\\core\\\\Polls\\\\FullPolls.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Poll from \"react-polls\";\nimport \"../../styles.scss\";\nimport { isAutheticated } from \"../../auth/helper/index\";\nimport { getPolls, postPoll } from \"../helper/coreapicalls\";\nimport axios from \"axios\";\nimport { API } from \"../../backend\";\nimport { useHistory } from \"react-router-dom\";\nimport Test from \"./Test\";\n\nconst FullPoll = () => {\n  const userId = isAutheticated() && isAutheticated().user._id;\n\n  const [polls, setPoll] = useState([]);\n  const [error, seterror] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    loadPoll();\n  }, [polls]);\n\n  const loadPoll = () => {\n    getPolls().then(data => {\n      if (data.error) {\n        seterror(data.error);\n      } else {\n        setPoll(data.reverse());\n        console.log(data);\n      }\n    });\n  }; // Handling user vote\n  // Increments the votes count of answer when the user votes\n\n\n  const handalchange = async (pollId, userId, answer) => {\n    if (userId === false || 0) {\n      history.push(\"/signin\");\n    } else {\n      console.log(pollId);\n      console.log(userId); // getting\n\n      console.log(answer); // getting\n\n      await axios.post(`${API}/vote/${pollId}`, {\n        userId,\n        answer\n      }).then(data => {\n        if (data.error) {\n          seterror(data.error);\n          console.log(data.error);\n        } else {\n          loadPoll(); // console.log(data);\n        }\n      });\n    }\n  };\n\n  const errorMessage = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, error)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"blog_heading my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Poll's of the Day\"), errorMessage(), /*#__PURE__*/React.createElement(Test, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FullPoll;","map":{"version":3,"sources":["E:/test/frontend/src/core/Polls/FullPolls.js"],"names":["React","useState","useEffect","Poll","isAutheticated","getPolls","postPoll","axios","API","useHistory","Test","FullPoll","userId","user","_id","polls","setPoll","error","seterror","history","loadPoll","then","data","reverse","console","log","handalchange","pollId","answer","push","post","errorMessage","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,mBAAP;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,wBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAGR,cAAc,MAAMA,cAAc,GAAGS,IAAjB,CAAsBC,GAAzD;;AACA,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBf,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMkB,OAAO,GAAGV,UAAU,EAA1B;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACL,KAAD,CAFM,CAAT;;AAIA,QAAMK,QAAQ,GAAG,MAAM;AACrBf,IAAAA,QAAQ,GAAGgB,IAAX,CAAiBC,IAAD,IAAU;AACxB,UAAIA,IAAI,CAACL,KAAT,EAAgB;AACdC,QAAAA,QAAQ,CAACI,IAAI,CAACL,KAAN,CAAR;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACM,IAAI,CAACC,OAAL,EAAD,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;AACF,KAPD;AAQD,GATD,CATqB,CAoBrB;AACA;;;AACA,QAAMI,YAAY,GAAG,OAAOC,MAAP,EAAef,MAAf,EAAuBgB,MAAvB,KAAkC;AACrD,QAAIhB,MAAM,KAAK,KAAX,IAAoB,CAAxB,EAA2B;AACzBO,MAAAA,OAAO,CAACU,IAAR,CAAa,SAAb;AACD,KAFD,MAEO;AACLL,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ,EAFK,CAEgB;;AACrBY,MAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ,EAHK,CAGgB;;AACrB,YAAMrB,KAAK,CACRuB,IADG,CACG,GAAEtB,GAAI,SAAQmB,MAAO,EADxB,EAC2B;AAAEf,QAAAA,MAAF;AAAUgB,QAAAA;AAAV,OAD3B,EAEHP,IAFG,CAEGC,IAAD,IAAU;AACd,YAAIA,IAAI,CAACL,KAAT,EAAgB;AACdC,UAAAA,QAAQ,CAACI,IAAI,CAACL,KAAN,CAAR;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACL,KAAjB;AACD,SAHD,MAGO;AACLG,UAAAA,QAAQ,GADH,CAEL;AACD;AACF,OAVG,CAAN;AAWD;AACF,GAnBD;;AAqBA,QAAMW,YAAY,GAAG,MAAM;AACzB,wBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAEf,KAAK,GAAG,EAAH,GAAQ;AAAxB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,KAJH,CADF,CADF,CADF;AAYD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAGGc,YAAY,EAHf,eAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAUD,CApED;;AAsEA,eAAepB,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Poll from \"react-polls\";\r\nimport \"../../styles.scss\";\r\nimport { isAutheticated } from \"../../auth/helper/index\";\r\nimport { getPolls, postPoll } from \"../helper/coreapicalls\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../../backend\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Test from \"./Test\";\r\n\r\nconst FullPoll = () => {\r\n  const userId = isAutheticated() && isAutheticated().user._id;\r\n  const [polls, setPoll] = useState([]);\r\n  const [error, seterror] = useState(false);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    loadPoll();\r\n  }, [polls]);\r\n\r\n  const loadPoll = () => {\r\n    getPolls().then((data) => {\r\n      if (data.error) {\r\n        seterror(data.error);\r\n      } else {\r\n        setPoll(data.reverse());\r\n        console.log(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Handling user vote\r\n  // Increments the votes count of answer when the user votes\r\n  const handalchange = async (pollId, userId, answer) => {\r\n    if (userId === false || 0) {\r\n      history.push(\"/signin\");\r\n    } else {\r\n      console.log(pollId);\r\n      console.log(userId); // getting\r\n      console.log(answer); // getting\r\n      await axios\r\n        .post(`${API}/vote/${pollId}`, { userId, answer })\r\n        .then((data) => {\r\n          if (data.error) {\r\n            seterror(data.error);\r\n            console.log(data.error);\r\n          } else {\r\n            loadPoll();\r\n            // console.log(data);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"\">\r\n        <div className=\"\">\r\n          <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"container my-5\">\r\n        <h1 className=\"blog_heading my-3\">Poll's of the Day</h1>\r\n\r\n        {errorMessage()}\r\n        <Test />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullPoll;\r\n"]},"metadata":{},"sourceType":"module"}